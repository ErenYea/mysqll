{"version":3,"sources":["app.js"],"names":["createError","require","express","cookieParser","path","bodyParser","indexRouter","logger","dashboardrouter","app","__dirname","set","use","urlencoded","extended","join","json","res","next","err","message","locals","req","get","status","render","module","exports"],"mappings":"aAAA,IAAIA,YAAcC,QAAQ,eACtBC,QAAUD,QAAQ,WADlBD,KAAAA,QAAcC,QAGdE,aAAeF,QAAQ,iBAFvBC,OAAOD,QAAU,UACjBG,MAAOH,QAAQ,SAKbI,WAAaJ,QAAQ,eAEvBK,YAAcL,QAAQ,kBALtBM,YAASN,QAAQ,kBAOjBO,gBAAkBP,QAAQ,mBAE1BQ,IAAMP,UAJVO,IAAIH,IAAAA,QAAWF,KAAGH,KAAQS,UAAA,UAQ1BD,IAAIE,IAAI,cAAe,QAEvBF,IAAIG,IAAIL,OAAO,QARfE,IAAID,IAAAA,QAAAA,QAUJC,IAAIG,IAAIV,QAAQW,WAAW,CAAEC,UAAU,KARvCL,IAAIA,IAAGN,gBAUPM,IAAIG,IAAIV,QAAO,OAAQE,KAAKW,KAAKL,UAAW,YAP5CD,IAAIE,IAAIN,WAASD,QAGjBK,IAAIG,IAAIL,IAAAA,aACRE,IAAIG,IAAIV,SAAQc,aAChBP,IAAIG,IAAIV,UAAQW,iBAChBJ,IAAIG,IAAIT,SAAAA,EAARc,EAAAC,GACAT,EAAAT,YAAe,QAKfS,IAAIG,IAAI,SAARO,EAAkBX,EAAAA,EAAAA,GAGlBC,EAAIG,OAAIQ,QAAcH,EAAdG,QACNF,EAAIG,OAACrB,MAAL,gBAAiBsB,EAAjBb,IAAAc,IAAA,OAAAJ,EAAA,GAIFV,EAAIG,OAAIO,EAAAK,QAAA,KACNP,EAAAQ,OAAA,WASFC,OAAOC,QAAUlB","file":"app.min.js","sourcesContent":["var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\n\nconst mysql = require('mysql');\nconst bodyParser = require('body-parser');\n\nvar indexRouter = require('./routes/index');\nvar usersRouter = require('./routes/users');\nvar dashboardrouter = require('./routes/tables')\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(bodyParser.json())\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.use('/tables',dashboardrouter)\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}